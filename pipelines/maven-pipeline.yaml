apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: maven-pipeline
spec:
  workspaces:
    - name: shared-workspace
    - name: maven-settings
    - name: argocd-env-secret
  params:
  - name: APPLICATION_NAME
    type: string
    default: ""
  - name: GIT_URL
    type: string
    default: ""
  - name: GIT_DIR
    type: string
    default: ""
  - name: GIT_REVISION
    type: string
    default: "master"
  - name: MAVEN_MIRROR_URL
    type: string
    default: "http://repo1.maven.org/maven2"
  - name: MAVEN_OPTS
    type: string
    default: ""
  - name: BUILD_NAMESPACE
    type: string
    default: "labs-ci-cd"
  - name: TARGET_NAMESPACE
    type: string
    default: "labs-dev"
  tasks:
    - name: fetch-app-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "$(params.GIT_URL)"
        - name: subdirectory
          value: "$(params.GIT_DIR)"
        - name: deleteExisting
          value: "true"

    - name: fetch-cicd-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "https://github.com/eformat/tv-ci-cd.git"
        - name: subdirectory
          value: "cicd"
        - name: deleteExisting
          value: "true"
      runAfter:
        - fetch-app-repository

    - name: maven-run
      taskRef:
        name: maven
      params:
        - name: MAVEN_MIRROR_URL
          value: "$(params.MAVEN_MIRROR_URL)"
        - name: MAVEN_OPTS
          value: "$(params.MAVEN_OPTS)"
        - name: GOALS
          value:
            - "package"
      runAfter:
        - fetch-cicd-repository
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: output
          workspace: shared-workspace

    - name: kustomize-build-config
      taskRef:
        name: openshift-kustomize
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: "kustomize build $1 | oc apply -n $2 -f-"
        - name: ARGS
          value:
            - "cicd/applications"
            - "$(params.BUILD_NAMESPACE)"
      runAfter:
        - maven-run

    - name: oc-start-build
      taskRef:
        name: openshift-client
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: "oc start-build $1 --from-dir=. --follow"
        - name: ARGS
          value:
            - "$(params.APPLICATION_NAME)"
      runAfter:
        - kustomize-build-config

    - name: oc-tag-image
      taskRef:
        name: openshift-client
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: "oc -n $3 tag $1:latest $2/$1:latest"
        - name: ARGS
          value:
            - "$(params.APPLICATION_NAME)"
            - "$(params.TARGET_NAMESPACE)"
            - "$(params.BUILD_NAMESPACE)"
      runAfter:
        - oc-start-build

    - name: helm-argocd-apps
      taskRef:
        name: helm-template-from-source
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: charts_dir
          value: cicd/applications/deployment
        - name: values_file
          value: values-applications.yaml
        - name: release_name
          value: my
        - name: target_namespace
          value: "$(params.BUILD_NAMESPACE)"
        - name: overwrite_values
          value: "applications[0].source_ref=$(params.GIT_REVISION)" # [0] is pretty naf way to do this, perhaps do yq task first for this?
      runAfter:
        - oc-tag-image

    - name: argocd-sync-application
      taskRef:
        name: argocd-sync-and-wait
      workspaces:
      - name: argocd-env-secret
        workspace: argocd-env-secret
      params:
      - name: application-name
        value: "$(params.APPLICATION_NAME)"
      - name: flags
        value: --insecure
      - name: revision
        value: "$(params.GIT_REVISION)"
      runAfter:
      - helm-argocd-apps
