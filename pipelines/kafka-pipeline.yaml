apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: kafka-pipeline
spec:
  workspaces:
    - name: shared-workspace
  params:
  - name: APPLICATION_NAME
    type: string
    default: ""
  - name: GIT_URL
    type: string
    default: ""
  - name: GIT_REVISION
    type: string
    default: "master"
  - name: GIT_REF
    type: string
    default: "refs/heads/master"
  - name: GIT_SHORT_REVISION
    type: string
    default: ""
  - name: GIT_BRANCH
    type: string
    default: ""
  - name: BUILD_NAMESPACE
    type: string
    default: "labs-ci-cd"
  - name: DEV_NAMESPACE
    type: string
    default: "labs-dev"
  - name: TEST_NAMESPACE
    type: string
    default: "labs-test"
  tasks:
    - name: fetch-app-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "$(params.GIT_URL)"
        - name: revision
          value: "$(params.GIT_REVISION)"
        - name: refspec
          value: "$(params.GIT_REF)"
        - name: subdirectory
          value: "$(params.APPLICATION_NAME)/$(params.GIT_REF)"
        - name: deleteExisting
          value: "true"

    - name: fetch-cicd-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "https://github.com/tripvibe/tv-ci-cd.git"
        - name: revision
          value: "master"
        - name: subdirectory
          value: "$(params.APPLICATION_NAME)/cicd"
        - name: deleteExisting
          value: "true"
      runAfter:
        - fetch-app-repository

    - name: oc-apply-kafka-dev
      taskRef:
        name: openshift-client
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: "oc -n $1 apply -f $(params.APPLICATION_NAME)/$(params.GIT_REF)/ocp/kafka-deployment.yaml"
        - name: ARGS
          value:
            - "$(params.DEV_NAMESPACE)"
      runAfter:
        - fetch-cicd-repository

    - name: oc-wait-kafka-dev
      taskRef:
        name: openshift-client
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: "sleep 10 && oc -n $1 wait pod/tv-cluster-kafka-{0..2} --for=condition=Ready --timeout=300s"
        - name: ARGS
          value:
            - "$(params.DEV_NAMESPACE)"
      runAfter:
        - oc-apply-kafka-dev

    - name: oc-apply-kafka-test
      taskRef:
        name: openshift-client
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: "oc -n $1 apply -f $(params.APPLICATION_NAME)/$(params.GIT_REF)/ocp/kafka-deployment.yaml"
        - name: ARGS
          value:
            - "$(params.TEST_NAMESPACE)"
      runAfter:
        - fetch-cicd-repository

    - name: oc-wait-kafka-test
      taskRef:
        name: openshift-client
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: "sleep 30 && oc -n $1 wait pod/tv-cluster-kafka-{0..2} --for=condition=Ready --timeout=300s"
        - name: ARGS
          value:
            - "$(params.TEST_NAMESPACE)"
      runAfter:
        - oc-apply-kafka-test
